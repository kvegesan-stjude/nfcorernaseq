def rseqc_modules = params.rseqc_modules ? params.rseqc_modules.split(',').collect{ it.trim().toLowerCase() } : []

if (!params.skip_alignment && !params.skip_qc && !params.skip_rseqc) {
    if ('bam_stat' in rseqc_modules) {
        process {
            withName: '.*:BAM_RSEQC:RSEQC_BAMSTAT' {
                cpus = 1
                memory =  { check_max( 2.GB * task.attempt, 'memory'  ) }
                publishDir = [
                    path: { "${params.outdir}/${params.aligner}/rseqc/bam_stat" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
            }
        }
    }

    if ('infer_experiment' in rseqc_modules) {
        process {
            withName: '.*:BAM_RSEQC:RSEQC_INFEREXPERIMENT' {
                cpus = 1
                memory =  { check_max( 2.GB * task.attempt, 'memory'  ) }
                publishDir = [
                    path: { "${params.outdir}/${params.aligner}/rseqc/infer_experiment" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
            }
        }
    }

    if ('junction_annotation' in rseqc_modules) {
        process {
            withName: '.*:BAM_RSEQC:RSEQC_JUNCTIONANNOTATION' {
                cpus = 1
                memory =  { check_max( 2.GB * task.attempt, 'memory'  ) }
                publishDir = [
                    [
                        path: { "${params.outdir}/${params.aligner}/rseqc/junction_annotation/pdf" },
                        mode: params.publish_dir_mode,
                        pattern: '*.pdf'
                    ],
                    [
                        path: { "${params.outdir}/${params.aligner}/rseqc/junction_annotation/bed" },
                        mode: params.publish_dir_mode,
                        pattern: '*.bed'
                    ],
                    [
                        path: { "${params.outdir}/${params.aligner}/rseqc/junction_annotation/xls" },
                        mode: params.publish_dir_mode,
                        pattern: '*.xls'
                    ],
                    [
                        path: { "${params.outdir}/${params.aligner}/rseqc/junction_annotation/log" },
                        mode: params.publish_dir_mode,
                        pattern: '*.log'
                    ],
                    [
                        path: { "${params.outdir}/${params.aligner}/rseqc/junction_annotation/rscript" },
                        mode: params.publish_dir_mode,
                        pattern: '*.r'
                    ]
                ]
            }
        }
    }

    if ('junction_saturation' in rseqc_modules) {
        process {
            withName: '.*:BAM_RSEQC:RSEQC_JUNCTIONSATURATION' {
                cpus = 1
                memory = { check_max( 6.GB * task.attempt, 'memory'  ) }
                publishDir = [
                    [
                        path: { "${params.outdir}/${params.aligner}/rseqc/junction_saturation/pdf" },
                        mode: params.publish_dir_mode,
                        pattern: '*.pdf'
                    ],
                    [
                        path: { "${params.outdir}/${params.aligner}/rseqc/junction_saturation/rscript" },
                        mode: params.publish_dir_mode,
                        pattern: '*.r'
                    ]
                ]
            }
        }
    }

    if ('read_duplication' in rseqc_modules) {
        process {
            withName: '.*:BAM_RSEQC:RSEQC_READDUPLICATION' {
                cpus = 1
                memory = { check_max( 32.GB * task.attempt, 'memory'  ) }
                publishDir = [
                    [
                        path: { "${params.outdir}/${params.aligner}/rseqc/read_duplication/pdf" },
                        mode: params.publish_dir_mode,
                        pattern: '*.pdf'
                    ],
                    [
                        path: { "${params.outdir}/${params.aligner}/rseqc/read_duplication/xls" },
                        mode: params.publish_dir_mode,
                        pattern: '*.xls'
                    ],
                    [
                        path: { "${params.outdir}/${params.aligner}/rseqc/read_duplication/rscript" },
                        mode: params.publish_dir_mode,
                        pattern: '*.r'
                    ]
                ]
            }
        }
    }

    if ('read_distribution' in rseqc_modules && !params.bam_csi_index) {
        process {
            withName: '.*:BAM_RSEQC:RSEQC_READDISTRIBUTION' {
                cpus = 1
                memory =  { check_max( 2.GB * task.attempt, 'memory'  ) }
                publishDir = [
                    path: { "${params.outdir}/${params.aligner}/rseqc/read_distribution" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
            }
        }
    }

    if ('inner_distance' in rseqc_modules && !params.bam_csi_index) {
        process {
            withName: '.*:BAM_RSEQC:RSEQC_INNERDISTANCE' {
                cpus = 1
                memory =  { check_max( 2.GB * task.attempt, 'memory'  ) }
                publishDir = [
                    [
                        path: { "${params.outdir}/${params.aligner}/rseqc/inner_distance/txt" },
                        mode: params.publish_dir_mode,
                        pattern: '*.txt',
                        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                    ],
                    [
                        path: { "${params.outdir}/${params.aligner}/rseqc/inner_distance/pdf" },
                        mode: params.publish_dir_mode,
                        pattern: '*.pdf'
                    ],
                    [
                        path: { "${params.outdir}/${params.aligner}/rseqc/inner_distance/rscript" },
                        mode: params.publish_dir_mode,
                        pattern: '*.r'
                    ]
                ]
            }
        }
    }

    if ('tin' in rseqc_modules && !params.bam_csi_index) {
        process {
            withName: '.*:BAM_RSEQC:RSEQC_TIN' {
                cpus = 1
                memory =  { check_max( 2.GB * task.attempt, 'memory'  ) }
                publishDir = [
                    path: { "${params.outdir}/${params.aligner}/rseqc/tin" },
                    mode: params.publish_dir_mode,
                    saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
                ]
            }
        }
    }
}
